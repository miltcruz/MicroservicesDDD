services:
  rabbitmq:
    image: "rabbitmq:management"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d

  orderservice:
    build:
      context: .
      dockerfile: OrderService/Dockerfile
    container_name: orderservice
    ports:
      - "5001:80"
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - ConnectionStrings__DefaultConnection=Server=postgres;Database=${POSTGRES_DB};User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};
      - RabbitMQ__Host=${RABBITMQ_HOST}
      - RabbitMQ__Port=${RABBITMQ_PORT}
      - RabbitMQ__Username=${RABBITMQ_USER}
      - RabbitMQ__Password=${RABBITMQ_PASS}

  paymentservice:
    build:
      context: .
      dockerfile: PaymentService/Dockerfile
    container_name: paymentservice
    ports:
      - "5002:80"
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - ConnectionStrings__DefaultConnection=Server=postgres;Database=${POSTGRES_DB};User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};
      - RabbitMQ__Host=${RABBITMQ_HOST}
      - RabbitMQ__Port=${RABBITMQ_PORT}
      - RabbitMQ__Username=${RABBITMQ_USER}
      - RabbitMQ__Password=${RABBITMQ_PASS}

volumes:
  pgdata: